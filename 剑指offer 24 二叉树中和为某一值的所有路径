//题目描述
	//输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。
	//路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。
	//(注意: 在返回值的list中，数组长度大的数组靠前)
  
	vector<vector<int>> res;
	vector<int> path;
	vector<vector<int> > FindPath(TreeNode* root,int expectNumber) {
		if(root==NULL || expectNumber<=0) return res;
		findHelper(root, expectNumber); 
		return res;
    }
	void findHelper(TreeNode* root, int sum){
		if(root==NULL) return;
		path.push_back(root->val);
		if(root->left==NULL && root->right==NULL && root->val==sum){
			res.push_back(path);
		}
		else{
			if(root->left!=NULL){
				findHelper(root->left, sum-root->val);
			}
			if(root->right!=NULL){
				findHelper(root->right, sum-root->val);
			}
		}
		path.pop_back();
	}
