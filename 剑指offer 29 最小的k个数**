//题目描述
	//输入n个整数，找出其中最小的K个数。
	//例如输入4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4,。
  
  //partition O(n)-O(n^2）?牛客超时？
	vector<int> GetLeastNumbers_Solution(vector<int> input, int k) {
        vector<int> res;
		if(input.empty() || k>input.size()) return res;
		int len=input.size(), pos, s=0, e=len-1;
		pos=par(input, 0, len-1);
		while (pos!=k){
			if (pos>k) e=pos-1,pos=par(input, s, e);
			else s=pos+1,pos=par(input, s, e);
		}
		for(int i=0;i<k;i++){
			res.push_back(input[i]);
		}
		sort(res.begin(),res.end());
		return res;
    }
	int par(vector<int> &arr, int s, int e){
		int pivot=arr[s];
		int l=s+1, r=e;
		bool done=false;
		while(!done){
			while(l<=r && arr[l]<=pivot) 
				l++;
			while(l<=r && arr[r]>=pivot) 
				r--;
			if(l>r) done=true;
			else swap(arr, l, r); 
		}
		swap(arr, s, r);
		return r;
	}
  
  //最大堆，待写
