//统计一个数字在排序数组中出现的次数。
// O(n) O(1)
int GetNumberOfK1(vector<int> data ,int k) {
      if(data.empty()) return 0;
  int res=0;
  for(int i=0;i<data.size();i++){
    if(data[i]==k) res++;
  }
  return res;
  }
// O(logn) O(1)
int GetNumberOfK(vector<int> data ,int k) {
      if(data.empty()) return 0;
  int start=0, end=data.size()-1, res=0;
  while(start<=end){
    int mid=(start+end)>>1;
    if(data[mid]>k){
      end=mid-1;
    }
    else if(data[mid]<k) {
      start=mid+1;
    }
    else {
      int l=mid, r=mid;
      res++;
      while(data[--l]==k) res++;
      while(data[++r]==k) res++;
      cout<<res<<endl;
      break;
    }
  }
  return res;
  }
